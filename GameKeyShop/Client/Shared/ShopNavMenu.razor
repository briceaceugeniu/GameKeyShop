@inject ICategoryService CategoryService
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <span class="main-logo">Game Key Shop</span>
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-star" aria-hidden="true"></span> Featured
            </NavLink>
        </div>
        
        @foreach (var category in CategoryService.Categories)
        {
            <div class="nav-item px-3 category-nav">
                <NavLink class="nav-link" href="@category.Url">
                     @category.Name
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool _collapseNavMenu = true;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategoriesAsync();
        CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }

}
