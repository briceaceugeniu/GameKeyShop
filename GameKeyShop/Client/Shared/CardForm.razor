@inject ICreditCardService CreditCardService



<div class="container card-box p-4">
    
    @if (creditCard == null)
    {
        <span>
            You haven't specified your Credit Card, yet.
            <button class="btn btn-outline-success" @onclick="InitCreditCard">Add a Credit Card.</button>
        </span>
    }
    else if (!editCreditCard)
    {
        <p>
            <span>Card Number: @creditCard.Number</span><br />
            <span>Owner: @creditCard.Owner</span><br />
            <span>Expiration Date: @creditCard.ExpirationDate</span><br />
            <span>CVV: @creditCard.CVV</span><br />
        </p>
        <button class="btn btn-primary" @onclick="EditCreditCard">Edit</button>
    }
    else
    {
        <EditForm Model="creditCard" OnValidSubmit="SubmitCreditCard">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="cardNumber">Card Number</label>
                <InputText class="form-control" id="cardNumber" placeholder="1234 5678 9012 3456"
                           required maxlength="19" @bind-Value="creditCard.Number"/>
                <ValidationMessage For="@(() => creditCard.Number)" />
            </div>
            
            <div class="form-group">
                <label for="nameOnCard">Name on Card</label>
                <InputText class="form-control" id="nameOnCard" placeholder="John Doe"
                       required @bind-Value="creditCard.Owner"/>
                <ValidationMessage For="@(() => creditCard.Owner)" />
            </div>
            
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="expiryDate">Expiry Date</label>
                    <InputText class="form-control" id="expiryDate" placeholder="MM/YY"
                               required maxlength="5" @bind-Value="creditCard.ExpirationDate" />
                    <ValidationMessage For="@(() => creditCard.ExpirationDate)" />
                </div>

                <div class="form-group col-md-6">
                    <label for="cvv">CVV</label>
                    <InputNumber class="form-control" id="cvv" placeholder="123"
                               required maxlength="3" @bind-Value="creditCard.CVV" />
                    <ValidationMessage For="@(() => creditCard.CVV)" />
                </div>
            </div>
            
            <div class="form-group m-3">
                <button type="submit" class="btn btn-secondary">Check the Card</button>
            </div>
        </EditForm>
    }

</div>

@code {
    [Parameter]
    public EventCallback<bool> OnCreditCardSet { get; set; }

    CreditCard creditCard = null;
    bool editCreditCard = false;

    protected override async Task OnInitializedAsync()
    {
        creditCard = await CreditCardService.GetCreditCard();
        await OnCreditCardSet.InvokeAsync(creditCard != null);
    }

    private async Task SubmitCreditCard()
    {
        editCreditCard = false;
        creditCard = await CreditCardService.AddOrUpdateCreditCard(creditCard);
        await OnCreditCardSet.InvokeAsync(creditCard != null);
    }

    private void InitCreditCard()
    {
        creditCard = new CreditCard();
        editCreditCard = true;
    }

    private void EditCreditCard()
    {
        editCreditCard = true;
    }
}
