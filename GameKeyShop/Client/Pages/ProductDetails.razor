@page "/product/{id:int}"
@inject IProductService Service

@if (_product == null)
{
    <p>@_message</p>
}
else
{
    <div class="product-overview">
        <div class="product-img">
            <img src="@_product.ImageUrl" alt="@_product.Name">
        </div>
        <div class="product-details">
            <h3 class="product-title">@_product.Name</h3>
            <p class="product-description">@_product.Description</p>

            @if (_product.Variants.Count != 0)
            {
                <div class="input-group mb-3">
                    <label class="input-group-text" for="platform-select">Platform</label>
                    <select class="form-select" @onchange="@OnPlatformSelectionChanged" id="platform-select">
                        @foreach (var variant in _product.Variants)
                        {
                            <option value="@variant.PlatformType.Id">@variant.PlatformType.Name</option>
                        }
                    </select>
                </div>

                <div class="product-price">@_price</div>
            }
            else
            {
                <p>Product is unavailable for now.</p>
            }

        </div>
    </div>
}

@code {
    private Product? _product = null;
    private string _message = string.Empty;
    private int _currentTypeId = 1;
    private string _price = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _message = "Loading..";
        var response = await Service.GetProductAsync(Id);
        if (response != null && response is not { Success: true })
        {
            _message = response.Message ?? "Product not found!";
        }
        else
        {
            _product = response.Data;
            if (_product is {Variants.Count: > 0 })
            {
                _currentTypeId = _product.Variants[0].PlatformTypeId;
                _price = $"Price: € {_product.Variants[0].Price}";
            }
        }
    }

    private void OnPlatformSelectionChanged(ChangeEventArgs e)
    {
        if (_product == null || e.Value == null)
        {
            return;
        }

        var prodVariant = _product.Variants.FirstOrDefault(v => v.PlatformTypeId.ToString() == e.Value.ToString());
        if (prodVariant != null)
        {
            _price = $"Price: € {prodVariant.Price}";
        }
    }
}
