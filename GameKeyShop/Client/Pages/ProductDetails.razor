@page "/product/{id:int}"
@inject IProductService ProductService
@inject ICartService CartService

@if (_product == null)
{
    <span>@_message</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper m-2">
            @if (!string.IsNullOrEmpty(_product.ImageUrl))
            {
                <img class="media-img" src="@_product.ImageUrl" alt="@_product.Name" />
            }
        </div>
        <div class="">
            <h2 class="mb-0">@_product.Name</h2>
            <p>@_product.Description</p>

            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1">Developer</span>
                <input type="text" class="form-control" value="@(_product.Developer != null ? _product.Developer.Name : "Unknown")" readonly disabled>
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1">Publisher</span>
                <input type="text" class="form-control" value="@(_product.Publisher != null ? _product.Publisher.Name : "Unknown")" disabled readonly>
            </div>

            @if (_product.Variants.Count > 1)
            {
                <div class="mb-3">
                    <div class="input-group mb-3">
                        <label class="input-group-text" for="platform">Platform</label>
                        <select class="form-select" id="platform" @bind="_currentTypeId">
                            @foreach (var variant in _product.Variants)
                            {
                                <option value="@variant.PlatformTypeId">@variant.PlatformType.Name</option>
                            }
                        </select>
                    </div>
                </div>
            }
            else
            {
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1">Platform</span>
                    <input type="text" class="form-control" value="@(_product.Variants[0].PlatformType != null ?
                                                                       _product.Variants[0].PlatformType?.Name : "Unknown")" disabled readonly>
                </div>
            }
            @if (GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant()!.OriginalPrice > GetSelectedVariant()!.Price)
                {
                    <h6 class="text-muted original-price">
                        € @GetSelectedVariant()!.OriginalPrice
                    </h6>
                }
                <h4 class="price">
                    € @GetSelectedVariant()!.Price
                </h4>
            }
            <button class="btn btn-primary mb-5" @onclick="AddToCart">
                <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart
            </button>
        </div>
    </div>

}

@code {
    private Product? _product;
    private string _message = string.Empty;
    private int _currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _message = "Loading product...";

        var result = await ProductService.GetProductAsync(Id);
        if (result == null)
        {
            _message = "Could not fetch the product.";
        }
        else if (!result.Success)
        {
            _message = result.Message;
        }
        else
        {
            _product = result.Data;
            if (_product is {Variants.Count: > 0 })
            {
                _currentTypeId = _product.Variants[0].PlatformTypeId;
            }
        }
    }

    private ProductVariant? GetSelectedVariant()
    {
        var variant = _product?.Variants.FirstOrDefault(v => v.PlatformTypeId == _currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();

        if (productVariant != null)
        {
            var cartItem = new CartItem
            {
                ProductId = productVariant.ProductId,
                PlatformTypeId = productVariant.PlatformTypeId
            };

            await CartService.AddToCart(cartItem);
        }
    }
}